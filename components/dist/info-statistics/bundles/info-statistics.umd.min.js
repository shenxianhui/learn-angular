!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o(require("plugin-manager"),require("@angular/core"),require("ng-zorro-antd"),require("@angular/common")):"function"==typeof define&&define.amd?define("info-statistics",["plugin-manager","@angular/core","ng-zorro-antd","@angular/common"],o):t["info-statistics"]=o(t.pluginManager,t.ng.core,t.ngZorroAntd,t.ng.common)}(this,function(t,o,e,n){"use strict";i.prototype.ngOnInit=function(){var t=this,o=this.data.rollingNum||3;this.data.list.length<=o||setInterval(function(){var e=t.tbodyDiv.nativeElement.querySelectorAll(".progressbar");e.forEach(function(t,o){0==o?(t.style.transform="translateY(-10px) rotateX(90deg)",e[0].style.opacity="0"):t.style.transform="translateY(-43px)"}),setTimeout(function(){t.data.list.push(t.data.list.shift()),e.forEach(function(t){t.style.transition="none",t.style.transform="translate(0,0)",t.style.opacity="none",t.style.opacity="1",t.offsetHeight,t.style.transition="all 0.5s ease"})},500)},3e3)},i.prototype.getBodyHeight=function(){var t=this.data.rollingNum;return t?43*t+"px":"100%"},i.decorators=[{type:o.Component,args:[{selector:"lib-info-statistics",template:'<div class="wrap">\n  <div class="card-wrap">\n    <div class="crad">\n      <div class="card-cot">\n        <div\n          class="cot-top"\n          [style.fontSize]="color.titleValueSize"\n          [style.color]="color.titleValueColor"\n        >\n          {{ data.title1Value }}\n          \x3c!-- <span\n            *ngIf="data.title1Arrow === \'up\'"\n            [style.color]="\n              color.titleArrowColor && color.titleArrowColor.length\n                ? color.titleArrowColor[0] || \'#52d2ff\'\n                : \'#52d2ff\'\n            "\n            >↑</span\n          >\n          <span\n            *ngIf="data.title1Arrow === \'down\'"\n            [style.color]="\n              color.titleArrowColor && color.titleArrowColor.length\n                ? color.titleArrowColor[1] || \'#52d2ff\'\n                : \'#52d2ff\'\n            "\n          >\n            ↓\n          </span> --\x3e\n        </div>\n        <div\n          class="cot-bot text-ellipsis"\n          [style.fontSize]="color.titleLabelSize"\n          [style.color]="color.titleLabelColor"\n        >\n          {{ data.title1Label }}\n        </div>\n      </div>\n    </div>\n    <div class="crad">\n      <div class="card-cot">\n        <div\n          class="cot-top"\n          [style.fontSize]="color.titleValueSize"\n          [style.color]="color.titleValueColor"\n        >\n          {{ data.title2Value }}\n          \x3c!-- <span\n            *ngIf="data.title2Arrow === \'up\'"\n            [style.color]="\n              color.titleArrowColor && color.titleArrowColor.length\n                ? color.titleArrowColor[0] || \'#52d2ff\'\n                : \'#52d2ff\'\n            "\n            >↑</span\n          >\n          <span\n            *ngIf="data.title2Arrow === \'down\'"\n            [style.color]="\n              color.titleArrowColor && color.titleArrowColor.length\n                ? color.titleArrowColor[1] || \'#52d2ff\'\n                : \'#52d2ff\'\n            "\n          >\n            ↓\n          </span> --\x3e\n        </div>\n        <div\n          class="cot-bot text-ellipsis"\n          [style.fontSize]="color.titleLabelSize"\n          [style.color]="color.titleLabelColor"\n        >\n          {{ data.title2Label }}\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- <div class="line"></div> --\x3e\n  <img src="assets/info-statistics/image/line.png" alt="" class="new-line" />\n  <div class="card-bot-wrap">\n    <div class="card-left">\n      <div class="card-left-cot">\n        <img class="card-left-pic" [src]="data.contentIcon" alt="" />\n        <div\n          class="card-left--text text-ellipsis"\n          [style.fontSize]="color.contentLabelSize"\n          [style.color]="color.contentLabelColor"\n        >\n          {{ data.contentLabel }}\n        </div>\n      </div>\n    </div>\n    <div class="card-right">\n      <div class="card-right-cot">\n        <div\n          class="card-right-text"\n          [style.fontSize]="color.contentValueSize"\n          [style.color]="color.contentValueColor"\n        >\n          {{ data.contentValue }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div #tbody [style.height]="getBodyHeight()" class="progressbar-box">\n    <div *ngFor="let item of data.list" class="progressbar">\n      <div\n        class="text text-ellipsis"\n        [style.fontSize]="color.listTitleSize"\n        [style.color]="color.listTitleColor"\n      >\n        {{ item.title }}\n      </div>\n      <div class="middle">\n        <div\n          class="long"\n          [style.background]="\n            color.listProgressColor && color.listProgressColor.length\n              ? color.listProgressColor[1] || \'rgba(255, 255, 255, 0.2)\'\n              : \'rgba(255, 255, 255, 0.2)\'\n          "\n        >\n          <div\n            class="short"\n            [style.width]="item.progress + \'%\'"\n            [style.background]="\n              color.listProgressColor && color.listProgressColor.length\n                ? color.listProgressColor[0] ||\n                  \'linear-gradient(90deg, rgba(82, 210, 255, 0.4), rgba(109, 217, 255, 0.9) 99%)\'\n                : \'linear-gradient(90deg, rgba(82, 210, 255, 0.4), rgba(109, 217, 255, 0.9) 99%)\'\n            "\n          ></div>\n        </div>\n      </div>\n      <div\n        class="nub"\n        [style.fontSize]="color.listNumSize"\n        [style.color]="color.listNumColor"\n      >\n        {{ item.num }}\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".text-ellipsis{width:100%;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.wrap{width:100%;height:100%}.wrap .card-wrap{display:flex}.wrap .card-wrap .crad{width:50%;height:70px;background:rgba(255,255,255,.08)}.wrap .card-wrap .crad:not(:last-child){margin-right:10px}.wrap .card-wrap .crad .card-cot{margin-left:20px}.wrap .card-wrap .crad .card-cot .cot-top{margin-top:10px;height:24px;font-size:24px;font-family:PingFang SC,PingFang SC-Medium;font-weight:Medium;text-align:left;color:#52d2ff;line-height:24px;letter-spacing:.01px}.wrap .card-wrap .crad .card-cot .cot-bot{margin-top:12px;height:14px;font-size:14px;font-family:PingFang SC,PingFang SC-Medium;font-weight:Medium;text-align:left;color:#fff;line-height:14px;letter-spacing:.01px}.new-line{width:100%;height:5.6px}.line{position:relative;margin-top:12px;width:100%;height:1px;background:rgba(255,255,255,.4)}.line::before{content:'';position:absolute;left:0;top:0;width:30px;height:5px;background:#52d2ff}.line::after{content:'';position:absolute;right:0;top:0;width:30px;height:5px;background:#52d2ff}.card-bot-wrap{margin-top:5px;display:flex}.card-bot-wrap .card-left{padding-right:8px;margin-right:8px;width:65%;height:40px;background:rgba(255,255,255,.08);display:flex;align-items:center}.card-bot-wrap .card-left .card-left-cot{width:100%;margin-left:10px;display:flex;align-items:center;justify-content:center}.card-bot-wrap .card-left .card-left-cot .card-left-pic{width:24px;height:24px}.card-bot-wrap .card-left .card-left-cot .card-left--text{margin-left:12px;width:100%;height:14px;font-size:14px;font-family:PingFang SC,PingFang SC-Medium;font-weight:Medium;text-align:left;color:#fff;line-height:14px;letter-spacing:.01px}.card-bot-wrap .card-right{width:35%;height:40px;background:rgba(255,255,255,.08);display:flex;align-items:center;justify-content:flex-end;padding-right:10px}.card-bot-wrap .card-right .card-right-cot .card-right-text{width:81px;height:24px;font-size:24px;font-family:Roboto,Roboto-Medium;font-weight:Medium;text-align:right;color:#fff;line-height:24px;letter-spacing:.01px}.progressbar-box{overflow:hidden}.progressbar{margin-top:23px;display:flex;align-items:center;transtion:all .5s ease}.progressbar .text{width:58px;height:14px;font-size:14px;font-family:Roboto,Roboto-Medium;font-weight:Regular;text-align:left;color:#fff;line-height:14px;letter-spacing:.01px}.progressbar .middle{flex-grow:1;margin-left:18px;margin-right:24px}.progressbar .middle .long{width:100%;height:6px;background:rgba(255,255,255,.2)}.progressbar .middle .long .short{width:80%;height:6px;background:linear-gradient(90deg,rgba(82,210,255,.4),rgba(109,217,255,.9) 99%)}.progressbar .nub{width:33px;height:20px;font-size:18px;font-family:Roboto,Roboto-Medium;font-weight:Medium;text-align:right;color:#fafbff;line-height:20px;letter-spacing:.01px}"]}]}],i.ctorParameters=function(){return[{type:t.PluginManagerService},{type:t.componentData}]},i.propDecorators={tbodyDiv:[{type:o.ViewChild,args:["tbody"]}]};var r=i;function i(t,o){this.pluginManagerService=t,console.log("comData",o),this.data=o.configData.data,this.color=o.configData.color}function l(){}return l.decorators=[{type:o.NgModule,args:[{declarations:[r],entryComponents:[r],imports:[n.CommonModule,e.NgZorroAntdModule],exports:[r]}]}],t.createPlugin({name:"info-statistics",module:l,component:r})});
//# sourceMappingURL=info-statistics.umd.min.js.map